plugins {
	id 'java'
	id 'org.springframework.boot' version '3.4.0'
	id 'io.spring.dependency-management' version '1.1.6'
}

group = 'com.cherrymango'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(21)
	}
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-web'

	// devtools
	developmentOnly 'org.springframework.boot:spring-boot-devtools'

	// lombok
	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'
	testCompileOnly 'org.projectlombok:lombok'
	testAnnotationProcessor 'org.projectlombok:lombok'

	// test
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'

	// spring data jdbc, oracle, log4jdbc
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'com.oracle.database.jdbc:ojdbc11'
	implementation 'org.bgee.log4jdbc-log4j2:log4jdbc-log4j2-jdbc4:1.16'
	implementation 'org.springframework.boot:spring-boot-starter-jdbc'

	// thymeleaf
	implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
	implementation 'nz.net.ultraq.thymeleaf:thymeleaf-layout-dialect'

	// jsr 303 validation
	implementation 'org.springframework.boot:spring-boot-starter-validation'

	// spring security
	implementation 'org.springframework.boot:spring-boot-starter-security'     // 1. 스프링 시큐리티 사용하기 위한 스타터 추가
	implementation 'org.thymeleaf.extras:thymeleaf-extras-springsecurity6' 	   // 2. 타임리프에서 스프링 시큐리티를 사용하기 위한 의존성 추가
	testImplementation 'org.springframework.security:spring-security-test'     // 3. 스프링 시큐리티를 테스트하기 위한 의존성 추가

	// jwt
	testAnnotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.projectlombok:lombok'
	implementation 'io.jsonwebtoken:jjwt:0.9.1' // 자바 JWT 라이브러리 : JSON 웹 토큰(JSON Web Token, JWT)을 쉽게 생성하고 검증할 수 있는 라이브러리
	implementation 'javax.xml.bind:jaxb-api:2.3.1' // JAXB API 의존성 추가

	// OAuth2
	implementation 'org.springframework.boot:spring-boot-starter-oauth2-client'
	implementation 'com.fasterxml.jackson.core:jackson-databind' // 네이버에 필요


	// markdown
	implementation 'org.commonmark:commonmark:0.21.0'
}

tasks.named('test') {
	useJUnitPlatform()
}


//def frontendDir = "$projectDir/src/main/frontend"
//
//sourceSets {
//	main {
//		resources { srcDirs = ["$projectDir/src/main/resources"]
//		}
//	}
//}
//
//processResources { dependsOn "copyReactBuildFiles" }
//
//task installReact(type: Exec) {
//	workingDir "$frontendDir"
//	inputs.dir "$frontendDir"
//	group = BasePlugin.BUILD_GROUP
//	if (System.getProperty('os.name').toLowerCase(Locale.ROOT).contains('windows')) {
//		commandLine "npm.cmd", "audit", "fix"
//		commandLine 'npm.cmd', 'install' }
//	else {
//		commandLine "npm", "audit", "fix" commandLine 'npm', 'install'
//	}
//}
//
//task buildReact(type: Exec) {
//	dependsOn "installReact"
//	workingDir "$frontendDir"
//	inputs.dir "$frontendDir"
//	group = BasePlugin.BUILD_GROUP
//	if (System.getProperty('os.name').toLowerCase(Locale.ROOT).contains('windows')) {
//		commandLine "npm.cmd", "run-script", "build"
//	} else {
//		commandLine "npm", "run-script", "build"
//	}
//}
//
//task copyReactBuildFiles(type: Copy) {
//	dependsOn "buildReact"
//	from "$frontendDir/build"
//	into "$projectDir/src/main/resources/static"
//}